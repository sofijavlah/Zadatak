<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Zadatak</name>
    </assembly>
    <members>
        <member name="T:Zadatak.Attributes.DefineScopeType">
            <summary>
            Attribute for defining which services to add
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Zadatak.Attributes.NoUnitOfWork">
            <summary>
            
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Zadatak.Controllers.BaseController`2">
            <summary>
            Base Controller
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <typeparam name="TDto">The type of the dto.</typeparam>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase" />
        </member>
        <member name="F:Zadatak.Controllers.BaseController`2._mapper">
            <summary>
            Gets or sets the mapper.
            </summary>
            <value>
            The mapper.
            </value>
        </member>
        <member name="M:Zadatak.Controllers.BaseController`2.#ctor(AutoMapper.IMapper,Zadatak.Interfaces.IRepository{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Controllers.BaseController`2"/> class.
            </summary>
            <param name="mapper">The mapper.</param>
            <param name="repository">The repository.</param>
        </member>
        <member name="M:Zadatak.Controllers.BaseController`2.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Zadatak.Controllers.BaseController`2.Get(System.Int64)">
            <summary>
            Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
            <exception cref="T:Zadatak.Exceptions.CustomException">Doesn't exist</exception>
        </member>
        <member name="M:Zadatak.Controllers.BaseController`2.Post(`1)">
            <summary>
            Posts the specified dto.
            </summary>
            <param name="dto">The dto.</param>
            <returns></returns>
        </member>
        <member name="M:Zadatak.Controllers.BaseController`2.Put(System.Int64,`1)">
            <summary>
            Puts the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="dto">The dto.</param>
            <returns></returns>
        </member>
        <member name="M:Zadatak.Controllers.BaseController`2.Delete(System.Int64)">
            <summary>
            Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Zadatak.Controllers.DeviceController">
            <summary>
            
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase" />
        </member>
        <member name="F:Zadatak.Controllers.DeviceController._mapper">
            <summary>
            The mapper
            </summary>
        </member>
        <member name="F:Zadatak.Controllers.DeviceController._repository">
            <summary>
            The repository
            </summary>
        </member>
        <member name="M:Zadatak.Controllers.DeviceController.#ctor(AutoMapper.IMapper,Zadatak.Interfaces.IDeviceRepository,Zadatak.Interfaces.IEmployeeRepository,Zadatak.Interfaces.IUsageRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Controllers.DeviceController"/> class.
            </summary>
            <param name="mapper">The mapper.</param>
            <param name="repository">The repository.</param>
            <param name="employeeRepository">The employee repository.</param>
            <param name="usageRepository">The usage repository.</param>
        </member>
        <member name="M:Zadatak.Controllers.DeviceController.GetDeviceUseHistory(System.Int64)">
            <summary>
            Gets the device use history.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
            <exception cref="T:Zadatak.Exceptions.CustomException">Device doesn't exist</exception>
        </member>
        <member name="M:Zadatak.Controllers.DeviceController.GetDeviceCurrentInfo(System.Int64)">
            <summary>
            Gets the device current information.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
            <exception cref="T:Zadatak.Exceptions.CustomException">Device doesn't exist</exception>
        </member>
        <member name="M:Zadatak.Controllers.DeviceController.Post(Zadatak.DTOs.Device.DeviceDto)">
            <summary>
            Posts the specified dto.
            </summary>
            <param name="dto">The dto.</param>
            <returns></returns>
        </member>
        <member name="M:Zadatak.Controllers.DeviceController.Put(System.Int64,Zadatak.DTOs.Device.DeviceDto)">
            <summary>
            Changes device name OR user.
            </summary>
            <param name="id">The identifier.</param>
            <param name="dto">The dto.</param>
            <returns>
            BadRequest if device with given id doesn't exist or if employee with given id doesn't exist. Ok with message "Changed name" OR "Changed User". 
            </returns>
        </member>
        <member name="T:Zadatak.Controllers.EmployeeController">
            <summary>
            
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase" />
        </member>
        <member name="F:Zadatak.Controllers.EmployeeController._mapper">
            <summary>
            The mapper
            </summary>
        </member>
        <member name="F:Zadatak.Controllers.EmployeeController._repository">
            <summary>
            The repository
            </summary>
        </member>
        <member name="M:Zadatak.Controllers.EmployeeController.#ctor(AutoMapper.IMapper,Zadatak.Interfaces.IEmployeeRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Controllers.EmployeeController"/> class.
            </summary>
            <param name="mapper">The mapper.</param>
            <param name="repository">The repository.</param>
        </member>
        <member name="M:Zadatak.Controllers.EmployeeController.GetEmployeeUseHistory(System.Int64)">
            <summary>
            Gets the employee use history.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
            <exception cref="T:Zadatak.Exceptions.CustomException">Employee doesn't exist</exception>
        </member>
        <member name="T:Zadatak.Controllers.OfficeController">
            <summary>
            
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase" />
        </member>
        <member name="M:Zadatak.Controllers.OfficeController.#ctor(AutoMapper.IMapper,Zadatak.Interfaces.IOfficeRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Controllers.OfficeController"/> class.
            </summary>
            <param name="mapper">The mapper.</param>
            <param name="repository">The repository.</param>
        </member>
        <member name="M:Zadatak.Controllers.OfficeController.GetOfficeEmployees(System.String)">
            <summary>
            Gets the office employees.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
            <exception cref="T:Zadatak.Exceptions.CustomException">Office doesn't exist</exception>
        </member>
        <member name="M:Zadatak.Controllers.OfficeController.DeleteJustEmployees(System.Int64)">
            <summary>
            Deletes employees from office with given id.
            </summary>
            <param name="id">The identifier.</param>
            <returns>
            400 error code if office with given id doesn't exist, 200(Ok) code with appropriate message:
            "No employees..." if office is empty or "Employees removed" if delete was successful.
            </returns>
        </member>
        <member name="T:Zadatak.DTOs.Device.DeviceDto">
            <summary>
            
            </summary>
        </member>
        <member name="P:Zadatak.DTOs.Device.DeviceDto.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Zadatak.DTOs.Device.DeviceDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Zadatak.DTOs.Device.DeviceDto.Employee">
            <summary>
            Gets or sets the employee.
            </summary>
            <value>
            The employee.
            </value>
        </member>
        <member name="T:Zadatak.DTOs.Employee.EmployeeDto">
            <summary>
            
            </summary>
        </member>
        <member name="P:Zadatak.DTOs.Employee.EmployeeDto.EmployeeId">
            <summary>
            Gets or sets the employee identifier.
            </summary>
            <value>
            The employee identifier.
            </value>
        </member>
        <member name="P:Zadatak.DTOs.Employee.EmployeeDto.FName">
            <summary>
            Gets or sets the name of the f.
            </summary>
            <value>
            The name of the f.
            </value>
        </member>
        <member name="P:Zadatak.DTOs.Employee.EmployeeDto.LName">
            <summary>
            Gets or sets the name of the l.
            </summary>
            <value>
            The name of the l.
            </value>
        </member>
        <member name="P:Zadatak.DTOs.Employee.EmployeeDto.Office">
            <summary>
            Gets or sets the office.
            </summary>
            <value>
            The office.
            </value>
        </member>
        <member name="T:Zadatak.DTOs.Office.OfficeDto">
            <summary>
            
            </summary>
        </member>
        <member name="P:Zadatak.DTOs.Office.OfficeDto.OfficeName">
            <summary>
            Gets or sets the name of the office.
            </summary>
            <value>
            The name of the office.
            </value>
        </member>
        <member name="P:Zadatak.DTOs.Office.OfficeDto.OfficeId">
            <summary>
            Gets or sets the office identifier.
            </summary>
            <value>
            The office identifier.
            </value>
        </member>
        <member name="T:Zadatak.DTOs.Usage.UsageDeviceDto">
            <summary>
            
            </summary>
        </member>
        <member name="P:Zadatak.DTOs.Usage.UsageDeviceDto.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Zadatak.DTOs.Usage.UsageDeviceDto.From">
            <summary>
            Gets or sets from.
            </summary>
            <value>
            From.
            </value>
        </member>
        <member name="P:Zadatak.DTOs.Usage.UsageDeviceDto.To">
            <summary>
            Gets or sets to.
            </summary>
            <value>
            To.
            </value>
        </member>
        <member name="T:Zadatak.DTOs.Usage.UsageDto">
            <summary>
            
            </summary>
        </member>
        <member name="P:Zadatak.DTOs.Usage.UsageDto.From">
            <summary>
            Gets or sets from.
            </summary>
            <value>
            From.
            </value>
        </member>
        <member name="P:Zadatak.DTOs.Usage.UsageDto.To">
            <summary>
            Gets or sets to.
            </summary>
            <value>
            To.
            </value>
        </member>
        <member name="T:Zadatak.DTOs.Usage.UsageUserDto">
            <summary>
            
            </summary>
        </member>
        <member name="P:Zadatak.DTOs.Usage.UsageUserDto.UserFn">
            <summary>
            Gets or sets the user function.
            </summary>
            <value>
            The user function.
            </value>
        </member>
        <member name="P:Zadatak.DTOs.Usage.UsageUserDto.UserLn">
            <summary>
            Gets or sets the user ln.
            </summary>
            <value>
            The user ln.
            </value>
        </member>
        <member name="P:Zadatak.DTOs.Usage.UsageUserDto.From">
            <summary>
            Gets or sets from.
            </summary>
            <value>
            From.
            </value>
        </member>
        <member name="P:Zadatak.DTOs.Usage.UsageUserDto.To">
            <summary>
            Gets or sets to.
            </summary>
            <value>
            To.
            </value>
        </member>
        <member name="T:Zadatak.Exceptions.CustomException">
            <summary>
            Custom exception
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Zadatak.Exceptions.CustomException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Exceptions.CustomException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Zadatak.Exceptions.CustomException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Exceptions.CustomException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:Zadatak.Exceptions.ExceptionHandling">
            <summary>
            Format in which the result will be shown
            </summary>
        </member>
        <member name="P:Zadatak.Exceptions.ExceptionHandling.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="P:Zadatak.Exceptions.ExceptionHandling.IsError">
            <summary>
            Gets or sets a value indicating whether this instance is error.
            </summary>
            <value>
              <c>true</c> if this instance is error; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Zadatak.Exceptions.ExceptionHandling.Exception">
            <summary>
            Gets or sets the exception.
            </summary>
            <value>
            The exception.
            </value>
        </member>
        <member name="T:Zadatak.Exceptions.MyException">
            <summary>
            Format of exception in response
            </summary>
        </member>
        <member name="P:Zadatak.Exceptions.MyException.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:Zadatak.Exceptions.MyException.Exception">
            <summary>
            Gets or sets the exception.
            </summary>
            <value>
            The exception.
            </value>
        </member>
        <member name="P:Zadatak.Exceptions.MyException.StackTrace">
            <summary>
            Gets or sets the stack trace.
            </summary>
            <value>
            The stack trace.
            </value>
        </member>
        <member name="T:Zadatak.Extensions.GenericClassesExtension">
            <summary>
            
            </summary>
        </member>
        <member name="T:Zadatak.Filters.MyExceptionFilter">
            <summary>
            Handle exceptions
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter" />
        </member>
        <member name="M:Zadatak.Filters.MyExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            Called after an action has thrown an <see cref="T:System.Exception" />.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ExceptionContext" />.</param>
        </member>
        <member name="T:Zadatak.Filters.MyReturnFilter">
            <summary>
            Modify the response of actions
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Filters.IResultFilter" />
        </member>
        <member name="M:Zadatak.Filters.MyReturnFilter.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext)">
            <summary>
            Called before the action result executes.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext" />.</param>
        </member>
        <member name="M:Zadatak.Filters.MyReturnFilter.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext)">
            <summary>
            Called after the action result executes.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext" />.</param>
        </member>
        <member name="T:Zadatak.Filters.UnitOfWorkFilter">
            <summary>
            Unit of work to handle transactions
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Filters.IActionFilter" />
        </member>
        <member name="M:Zadatak.Filters.UnitOfWorkFilter.#ctor(Zadatak.Models.WorkContext,Zadatak.Interfaces.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Filters.UnitOfWorkFilter"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="unitOfWork">The unit of work.</param>
        </member>
        <member name="M:Zadatak.Filters.UnitOfWorkFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Called before the action executes, after model binding is complete.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext" />.</param>
        </member>
        <member name="M:Zadatak.Filters.UnitOfWorkFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            Called after the action executes, before the action result.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext" />.</param>
            <exception cref="T:Zadatak.Exceptions.CustomException">Cannot delete</exception>
        </member>
        <member name="T:Zadatak.Interfaces.IDeviceRepository">
            <summary>
            Interface for Device Repository
            </summary>
            <seealso>
                <cref>Repositories.IRepository{Models.Device}</cref>
            </seealso>
        </member>
        <member name="M:Zadatak.Interfaces.IDeviceRepository.GetDeviceUseHistory(System.Int64)">
            <summary>
            Gets the device use history.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Zadatak.Interfaces.IDeviceRepository.GetDeviceCurrentInfo(System.Int64)">
            <summary>
            Gets the device current information.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Zadatak.Interfaces.IDeviceRepository.ChangeDeviceNameOrUser(System.Int64,Zadatak.DTOs.Device.DeviceDto)">
            <summary>
            Changes the device name or user.
            </summary>
            <param name="id">The identifier.</param>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Zadatak.Interfaces.IDeviceRepository.Add(Zadatak.DTOs.Device.DeviceDto)">
            <summary>
            Adds the specified dto.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Zadatak.Interfaces.IDeviceRepository.GetDeviceByName(System.String)">
            <summary>
            Gets the name of the device by.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:Zadatak.Interfaces.IEmployeeRepository">
            <summary>
            Interface for Employee Repository
            </summary>
            <seealso>
                <cref>Repositories.IRepository{Models.Employee}</cref>
            </seealso>
        </member>
        <member name="M:Zadatak.Interfaces.IEmployeeRepository.GetEmployeeUseHistory(System.Int64)">
            <summary>
            Gets the employee use history.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Zadatak.Interfaces.IOfficeRepository">
            <summary>
            Interface for Office Repository
            </summary>
            <seealso>
                <cref>Repositories.IRepository{Models.Office}</cref>
            </seealso>
        </member>
        <member name="M:Zadatak.Interfaces.IOfficeRepository.GetOffice(System.String)">
            <summary>
            Gets the office with given name
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="T:Zadatak.Interfaces.IRepository`1">
            <summary>
            Generic repository
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
        </member>
        <member name="M:Zadatak.Interfaces.IRepository`1.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns>
            List of all entities.
            </returns>
        </member>
        <member name="M:Zadatak.Interfaces.IRepository`1.Get(System.Int64)">
            <summary>
            Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>
            Entity with given Id.
            </returns>
        </member>
        <member name="M:Zadatak.Interfaces.IRepository`1.Add(`0)">
            <summary>
            Adds the specified example.
            </summary>
            <param name="example">The example.</param>
        </member>
        <member name="M:Zadatak.Interfaces.IRepository`1.Update(`0)">
            <summary>
            Updates the specified example.
            </summary>
            <param name="example">The example.</param>
        </member>
        <member name="M:Zadatak.Interfaces.IRepository`1.Remove(`0)">
            <summary>
            Removes the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="T:Zadatak.Interfaces.IUnitOfWork">
            <summary>
            Interface for Unit of Work
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Zadatak.Interfaces.IUnitOfWork.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="M:Zadatak.Interfaces.IUnitOfWork.Start(System.Boolean)">
            <summary>
            Starts this instance.
            </summary>
            <param name="disable"></param>
        </member>
        <member name="M:Zadatak.Interfaces.IUnitOfWork.GetReadOnly">
            <summary>
            Gets the read only.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Zadatak.Interfaces.IUnitOfWork.Commit">
            <summary>
            Commits this instance.
            </summary>
        </member>
        <member name="T:Zadatak.Interfaces.IUsageRepository">
             <summary>
             Interface for Usage Repository
             </summary>
            
            <seealso>
                 <cref>Repositories.IRepository{Models.DeviceUsage}</cref>
             </seealso>
        </member>
        <member name="M:Zadatak.Interfaces.IUsageRepository.Add(Zadatak.Models.Device)">
            <summary>
            Adds the specified device.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="T:Zadatak.Migrations.Prva">
            <summary>
            First migration
            </summary>
            <seealso cref="T:Microsoft.EntityFrameworkCore.Migrations.Migration" />
        </member>
        <member name="M:Zadatak.Migrations.Prva.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
            <para>
            Builds the operations that will migrate the database 'up'.
            </para>
            <para>
            That is, builds the operations that will take the database from the state left in by the
            previous migration so that it is up-to-date with regard to this migration.
            </para>
            <para>
            This method must be overridden in each class the inherits from <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Migration" />.
            </para>
            </summary>
            <param name="migrationBuilder">The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder" /> that will build the operations.</param>
        </member>
        <member name="M:Zadatak.Migrations.Prva.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
            <para>
            Builds the operations that will migrate the database 'down'.
            </para>
            <para>
            That is, builds the operations that will take the database from the state left in by
            this migration so that it returns to the state that it was in before this migration was applied.
            </para>
            <para>
            This method must be overridden in each class the inherits from <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Migration" /> if
            both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it
            will throw and it will not be possible to migrate in the 'down' direction.
            </para>
            </summary>
            <param name="migrationBuilder">The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder" /> that will build the operations.</param>
        </member>
        <member name="M:Zadatak.Migrations.Prva.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Implemented to builds the <see cref="P:Microsoft.EntityFrameworkCore.Migrations.Migration.TargetModel" />.
            </summary>
            <param name="modelBuilder">The <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> to use to build the model.</param>
        </member>
        <member name="T:Zadatak.Models.Device">
            <summary>
            Device model class
            </summary>
        </member>
        <member name="P:Zadatak.Models.Device.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Zadatak.Models.Device.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Zadatak.Models.Device.EmployeeId">
            <summary>
            Gets or sets the employee identifier.
            </summary>
            <value>
            The employee identifier.
            </value>
        </member>
        <member name="P:Zadatak.Models.Device.Employee">
            <summary>
            Gets or sets the employee.
            </summary>
            <value>
            The employee.
            </value>
        </member>
        <member name="P:Zadatak.Models.Device.UsageList">
            <summary>
            Gets or sets the usage list.
            </summary>
            <value>
            The usage list.
            </value>
        </member>
        <member name="T:Zadatak.Models.DeviceUsage">
            <summary>
            
            </summary>
        </member>
        <member name="P:Zadatak.Models.DeviceUsage.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Zadatak.Models.DeviceUsage.From">
            <summary>
            Gets or sets from.
            </summary>
            <value>
            From.
            </value>
        </member>
        <member name="P:Zadatak.Models.DeviceUsage.To">
            <summary>
            Gets or sets to.
            </summary>
            <value>
            To.
            </value>
        </member>
        <member name="P:Zadatak.Models.DeviceUsage.Employee">
            <summary>
            Gets or sets the employee.
            </summary>
            <value>
            The employee.
            </value>
        </member>
        <member name="P:Zadatak.Models.DeviceUsage.Device">
            <summary>
            Gets or sets the device.
            </summary>
            <value>
            The device.
            </value>
        </member>
        <member name="T:Zadatak.Models.Employee">
            <summary>
            
            </summary>
        </member>
        <member name="P:Zadatak.Models.Employee.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Zadatak.Models.Employee.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
            <value>
            The first name.
            </value>
        </member>
        <member name="P:Zadatak.Models.Employee.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
            <value>
            The last name.
            </value>
        </member>
        <member name="P:Zadatak.Models.Employee.OfficeId">
            <summary>
            Gets or sets the office identifier.
            </summary>
            <value>
            The office identifier.
            </value>
        </member>
        <member name="P:Zadatak.Models.Employee.Office">
            <summary>
            Gets or sets the office.
            </summary>
            <value>
            The office.
            </value>
        </member>
        <member name="P:Zadatak.Models.Employee.Devices">
            <summary>
            Gets or sets the devices.
            </summary>
            <value>
            The devices.
            </value>
        </member>
        <member name="P:Zadatak.Models.Employee.UsageList">
            <summary>
            Gets or sets the usage list.
            </summary>
            <value>
            The usage list.
            </value>
        </member>
        <member name="T:Zadatak.Models.Office">
            <summary>
            
            </summary>
        </member>
        <member name="P:Zadatak.Models.Office.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Zadatak.Models.Office.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Zadatak.Models.Office.Employees">
            <summary>
            Gets or sets the employees.
            </summary>
            <value>
            The employees.
            </value>
        </member>
        <member name="T:Zadatak.Models.WorkContext">
            <summary>
            
            </summary>
            <seealso cref="T:Microsoft.EntityFrameworkCore.DbContext" />
        </member>
        <member name="F:Zadatak.Models.WorkContext._ho">
            <summary>
            The ho
            </summary>
        </member>
        <member name="M:Zadatak.Models.WorkContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Zadatak.Models.WorkContext},Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Models.WorkContext"/> class.
            </summary>
            <param name="options">The options.</param>
            <param name="ho">The ho.</param>
        </member>
        <member name="P:Zadatak.Models.WorkContext.Offices">
            <summary>
            Gets or sets the offices.
            </summary>
            <value>
            The offices.
            </value>
        </member>
        <member name="P:Zadatak.Models.WorkContext.Employees">
            <summary>
            Gets or sets the employees.
            </summary>
            <value>
            The employees.
            </value>
        </member>
        <member name="P:Zadatak.Models.WorkContext.Devices">
            <summary>
            Gets or sets the devices.
            </summary>
            <value>
            The devices.
            </value>
        </member>
        <member name="P:Zadatak.Models.WorkContext.DeviceUsages">
            <summary>
            Gets or sets the device usages.
            </summary>
            <value>
            The device usages.
            </value>
        </member>
        <member name="T:Zadatak.Profiles.DeviceProfile">
            <summary>
            
            </summary>
            <seealso cref="T:AutoMapper.Profile" />
        </member>
        <member name="M:Zadatak.Profiles.DeviceProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Profiles.DeviceProfile"/> class.
            </summary>
        </member>
        <member name="T:Zadatak.Profiles.EmployeeProfile">
            <summary>
            
            </summary>
            <seealso cref="T:AutoMapper.Profile" />
        </member>
        <member name="M:Zadatak.Profiles.EmployeeProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Profiles.EmployeeProfile"/> class.
            </summary>
        </member>
        <member name="T:Zadatak.Profiles.OfficeProfile">
            <summary>
            
            </summary>
            <seealso cref="T:AutoMapper.Profile" />
        </member>
        <member name="M:Zadatak.Profiles.OfficeProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Profiles.OfficeProfile"/> class.
            </summary>
        </member>
        <member name="T:Zadatak.Profiles.UsageDeviceProfile">
            <summary>
            
            </summary>
            <seealso cref="T:AutoMapper.Profile" />
        </member>
        <member name="M:Zadatak.Profiles.UsageDeviceProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Profiles.UsageDeviceProfile"/> class.
            </summary>
        </member>
        <member name="T:Zadatak.Profiles.UsageProfile">
            <summary>
            
            </summary>
            <seealso cref="T:AutoMapper.Profile" />
        </member>
        <member name="M:Zadatak.Profiles.UsageProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Profiles.UsageProfile"/> class.
            </summary>
        </member>
        <member name="T:Zadatak.Profiles.UsageUserProfile">
            <summary>
            
            </summary>
            <seealso cref="T:AutoMapper.Profile" />
        </member>
        <member name="M:Zadatak.Profiles.UsageUserProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Profiles.UsageUserProfile"/> class.
            </summary>
        </member>
        <member name="T:Zadatak.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:Zadatak.Program.Main(System.String[])">
            <summary>
            Defines the entry point of the application.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Zadatak.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Creates the web host builder.
            </summary>
            <param name="args">The arguments.</param>
            <returns></returns>
        </member>
        <member name="T:Zadatak.Repositories.DeviceRepository">
            <summary>
            Device Repository
            </summary>
            <seealso>
                <cref>Repositories.Repository{Models.Device}</cref>
            </seealso>
            <seealso cref="T:Zadatak.Interfaces.IDeviceRepository" />
        </member>
        <member name="M:Zadatak.Repositories.DeviceRepository.#ctor(Zadatak.Models.WorkContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Repositories.DeviceRepository"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Zadatak.Repositories.DeviceRepository.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Zadatak.Repositories.DeviceRepository.GetDeviceUseHistory(System.Int64)">
            <summary>
            Gets the device use history.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
            <exception cref="T:Zadatak.Exceptions.CustomException">Doesn't exist</exception>
        </member>
        <member name="M:Zadatak.Repositories.DeviceRepository.GetDeviceCurrentInfo(System.Int64)">
            <summary>
            Gets the device current information.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
            <exception cref="T:Zadatak.Exceptions.CustomException">Doesn't exist</exception>
        </member>
        <member name="M:Zadatak.Repositories.DeviceRepository.GetDeviceByName(System.String)">
            <summary>
            Gets the name of the device by.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Zadatak.Repositories.DeviceRepository.Add(Zadatak.DTOs.Device.DeviceDto)">
            <summary>
            Adds the specified dto.
            </summary>
            <param name="dto">The dto.</param>
        </member>
        <member name="M:Zadatak.Repositories.DeviceRepository.ChangeDeviceNameOrUser(System.Int64,Zadatak.DTOs.Device.DeviceDto)">
            <summary>
            Changes the device name or user.
            </summary>
            <param name="id">The identifier.</param>
            <param name="dto">The dto.</param>
            <exception cref="T:System.Exception">Device doesn't exist</exception>
        </member>
        <member name="T:Zadatak.Repositories.EmployeeRepository">
            <summary>
            Employee Repository
            </summary>
            <seealso>
                <cref>Repositories.Repository{Models.Employee}</cref>
            </seealso>
            <seealso cref="T:Zadatak.Interfaces.IEmployeeRepository" />
        </member>
        <member name="M:Zadatak.Repositories.EmployeeRepository.#ctor(Zadatak.Models.WorkContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Repositories.EmployeeRepository"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Zadatak.Repositories.EmployeeRepository.Get(System.Int64)">
            <summary>
            Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Zadatak.Repositories.EmployeeRepository.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Zadatak.Repositories.EmployeeRepository.GetEmployeeUseHistory(System.Int64)">
            <summary>
            Gets the employee use history.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Zadatak.Repositories.OfficeRepository">
            <summary>
            Office Repository
            </summary>
            <seealso>
                <cref>Repositories.Repository{Models.Office}</cref>
            </seealso>
            <seealso cref="T:Zadatak.Interfaces.IOfficeRepository" />
        </member>
        <member name="M:Zadatak.Repositories.OfficeRepository.#ctor(Zadatak.Models.WorkContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Repositories.OfficeRepository"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Zadatak.Repositories.OfficeRepository.GetOffice(System.String)">
            <summary>
            Gets the office with given name
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="T:Zadatak.Repositories.Repository`1">
            <summary>
            Generic Repository
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <seealso cref="T:Zadatak.Interfaces.IRepository`1" />
        </member>
        <member name="P:Zadatak.Repositories.Repository`1.Context">
            <summary>
            Gets the context.
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="M:Zadatak.Repositories.Repository`1.#ctor(Zadatak.Models.WorkContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Repositories.Repository`1"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Zadatak.Repositories.Repository`1.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns>
            List of all entities.
            </returns>
        </member>
        <member name="M:Zadatak.Repositories.Repository`1.Get(System.Int64)">
            <summary>
            Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>
            Entity with given Id.
            </returns>
            <exception cref="T:Zadatak.Exceptions.CustomException">Doesn't exist</exception>
        </member>
        <member name="M:Zadatak.Repositories.Repository`1.Add(`0)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Zadatak.Repositories.Repository`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Finds the specified predicate.
            </summary>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:Zadatak.Repositories.Repository`1.Update(`0)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Zadatak.Repositories.Repository`1.Remove(`0)">
            <summary>
            Removes the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="T:Zadatak.Repositories.UsageRepository">
            <summary>
            
            </summary>
            <seealso>
                <cref>Repositories.Repository{Models.DeviceUsage}</cref>
            </seealso>
            <seealso cref="T:Zadatak.Interfaces.IUsageRepository" />
        </member>
        <member name="M:Zadatak.Repositories.UsageRepository.#ctor(Zadatak.Models.WorkContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Repositories.UsageRepository"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Zadatak.Repositories.UsageRepository.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Zadatak.Repositories.UsageRepository.Add(Zadatak.Models.Device)">
            <summary>
            Adds the specified device.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:Zadatak.Repositories.UsageRepository.Update(Zadatak.Models.DeviceUsage)">
            <summary>
            Updates the specified device usage.
            </summary>
            <param name="deviceUsage">The device usage.</param>
        </member>
        <member name="T:Zadatak.Startup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Zadatak.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.Startup"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="P:Zadatak.Startup.Configuration">
            <summary>
            Gets the configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="M:Zadatak.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures the services.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:Zadatak.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Configures the specified application.
            </summary>
            <param name="app">The application.</param>
            <param name="env">The env.</param>
        </member>
        <member name="T:Zadatak.UnitOfWork.UnitOfWork">
            <summary>
            Unit of Work
            </summary>
            <seealso cref="T:Zadatak.Interfaces.IUnitOfWork" />
        </member>
        <member name="M:Zadatak.UnitOfWork.UnitOfWork.#ctor(Zadatak.Models.WorkContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Zadatak.UnitOfWork.UnitOfWork"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Zadatak.UnitOfWork.UnitOfWork.GetReadOnly">
            <summary>
            Gets the read only.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Zadatak.UnitOfWork.UnitOfWork.Start(System.Boolean)">
            <summary>
            Starts this instance.
            </summary>
            <param name="disable"></param>
        </member>
        <member name="M:Zadatak.UnitOfWork.UnitOfWork.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="M:Zadatak.UnitOfWork.UnitOfWork.Commit">
            <summary>
            Commits this instance.
            </summary>
        </member>
        <member name="M:Zadatak.UnitOfWork.UnitOfWork.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
    </members>
</doc>
